{"version":3,"sources":["webpack://project_2/webpack/bootstrap","webpack://project_2/./src/js/card-component.js","webpack://project_2/./src/page-index/main.js"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","Card","constructor","id","title","description","status","this","cardForm","document","createElement","className","cardTop","cardName","innerHTML","cardOptionsBtn","i","dot","appendChild","cardContent","cardOptions","changeOption","deleteOption","addEventListener","onDelete","onChange","style","display","color","background","window","getElementById","setAttribute","iconTesting","iconAddTask","iconDashboard","iconDone","iconInProgress","iconToDo","iconLogOut","localStorage","getItem","location","href","avaterLetter","addTaskButton","username","string","querySelector","charAt","toUpperCase","slice","toDoSection","InProgressSection","testingSection","doneSection","logOut","submitNewTask","newTaskName","value","newTaskContent","card","console","log","async","url","data","fetch","method","mode","cache","credentials","headers","Authorization","redirect","referrerPolicy","body","JSON","stringify","json","postData","then","reload","removeCard","catch","err","error","openChangeCardMenu","newTaskStatus","createNewTask","contentEditable","innerText","onsubmit","changeCard","putData","btnAddTask","btnCloseTask","checked","boardTitle","dashboardPage","toDoPage","inProgressPage","testingPage","donePage","parentElement","classList","add","remove","getData","forEach","chunk","newCard","section","htmlRepresentation","appendCard","confirm","clear"],"mappings":"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","file":"index.4aa5806e376bbe273a89.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","//\n// Created by Anna Vasylashko\n//\n\nexport default class Card {\n  constructor(id, title, description, status) {\n    this.id = id;\n    this.title = title;\n    this.description = description;\n    this.status = status;\n  }\n\n  // -----DECORATOR PATTERN-----\n\n  get htmlRepresentation() {\n    // Creating card, it's name, content and button for options (change/delete)\n\n    const cardForm = document.createElement('div');\n    cardForm.className = 'card';\n\n    const cardTop = document.createElement('div');\n    cardTop.className = 'card-top';\n\n    const cardName = document.createElement('span');\n    cardName.className = 'card-name';\n    cardName.innerHTML = this.title;\n\n    const cardOptionsBtn = document.createElement('button');\n    cardOptionsBtn.className = 'card-options btn';\n\n    for (let i = 0; i < 3; i += 1) {\n      const dot = document.createElement('div');\n      dot.className = 'card-option-dot';\n\n      cardOptionsBtn.appendChild(dot);\n    }\n\n    const cardContent = document.createElement('p');\n    cardContent.className = 'card-content';\n    cardContent.innerHTML = this.description;\n\n    // Creating card options (chage/delete)\n\n    const cardOptions = document.createElement('div');\n    cardOptions.className = 'card-options-form';\n\n    const changeOption = document.createElement('button');\n    changeOption.className = 'card-options-change btn';\n    changeOption.innerHTML = 'Change';\n\n    const deleteOption = document.createElement('button');\n    deleteOption.className = 'card-options-delete btn';\n    deleteOption.innerHTML = 'Delete';\n\n    // Add method to implement delete option\n\n    deleteOption.addEventListener('click', () => {\n      if (this.onDelete) {\n        this.onDelete(this.id);\n      }\n    });\n\n    changeOption.addEventListener('click', () => {\n      if (this.onChange) {\n        this.onChange(this);\n      }\n    });\n\n    // Show/hide card options\n\n    cardOptionsBtn.addEventListener('click', () => {\n      if (cardOptions.style.display === 'flex') {\n        cardOptions.style.display = 'none';\n      } else {\n        cardOptions.style.display = 'flex';\n      }\n    });\n\n    // Appending card elements\n\n    cardOptions.appendChild(changeOption);\n    cardOptions.appendChild(deleteOption);\n\n    cardTop.appendChild(cardName);\n    cardTop.appendChild(cardOptionsBtn);\n    cardForm.appendChild(cardTop);\n    cardForm.appendChild(cardContent);\n    cardForm.appendChild(cardOptions);\n\n    // Applying card name colors according to task type\n\n    switch (this.status) {\n      case 'to_do':\n        cardName.style.color = '#d7385e';\n        cardName.style.background = '#ffe1e8';\n        break;\n      case 'in_progress':\n        cardName.style.color = '#ff9345';\n        cardName.style.background = '#ffe6d4';\n        break;\n      case 'testing':\n        cardName.style.color = '#ffb800';\n        cardName.style.background = '#fef8d7';\n        break;\n      case 'done':\n        cardName.style.color = '#37d050';\n        cardName.style.background = '#daffd4';\n        break;\n      default:\n    }\n\n    return cardForm;\n  }\n}\n","/* eslint-disable no-alert */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-console */\n//\n// Created by Anna Vasylashko\n//\n\nimport Card from '../js/card-component';\nimport '../css/mainPage.css';\nimport '../css/dashboard.css';\nimport '../css/card.css';\nimport '../css/newTask.css';\nimport iconTesting from '../img/iconTesting.png';\nimport iconAddTask from '../img/iconAddTask.png';\nimport iconDashboard from '../img/iconDashboard.png';\nimport iconDone from '../img/iconDone.png';\nimport iconInProgress from '../img/iconInProgress.png';\nimport iconToDo from '../img/iconToDo.png';\nimport iconLogOut from '../img/iconLogOut.png';\n\n// -----SET ICONS ON THE PAGE-----\n\nwindow.document.addEventListener('DOMContentLoaded', () => {\n  document.getElementById('iconTesting').setAttribute('src', iconTesting);\n  document.getElementById('iconAddTask').setAttribute('src', iconAddTask);\n  document.getElementById('iconDashboard').setAttribute('src', iconDashboard);\n  document.getElementById('iconDone').setAttribute('src', iconDone);\n  document.getElementById('iconInProgress').setAttribute('src', iconInProgress);\n  document.getElementById('iconToDo').setAttribute('src', iconToDo);\n  document.getElementById('iconLogOut').setAttribute('src', iconLogOut);\n});\n\nif (!window.localStorage.getItem('token')) {\n  window.location.href = 'login.html';\n}\n\n// -----WORK WITH USER ON DASHBOARD-----\n\nconst avaterLetter = document.getElementById('avaterLetter');\nconst addTaskButton = document.getElementById('submit-new-task');\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst username = window.localStorage.getItem('username');\n\ndocument.querySelector(\n  '#main-section-user-name',\n).innerHTML = `Hi, ${capitalizeFirstLetter(username)}`;\n\n// -----APPENDING CARDS IN SECTIONS-----\n\nconst toDoSection = document.getElementById('toDo');\nconst InProgressSection = document.getElementById('inProgress');\nconst testingSection = document.getElementById('testing');\nconst doneSection = document.getElementById('done');\nconst logOut = document.getElementById('logOut');\n\nconst appendCard = (newCard) => {\n  let section;\n\n  switch (newCard.status) {\n    case 'to_do':\n      section = toDoSection;\n      break;\n    case 'in_progress':\n      section = InProgressSection;\n      break;\n    case 'testing':\n      section = testingSection;\n      break;\n    case 'done':\n      section = doneSection;\n      break;\n    default:\n      break;\n  }\n\n  newCard.onDelete = removeCard;\n  newCard.onChange = openChangeCardMenu;\n\n  section.appendChild(newCard.htmlRepresentation);\n};\n\n// -----POST, PUT, GET, DELETE AND REFRESH DATA TEMPLATES-----\n\n// -----POST DATA-----\n\nasync function postData(url = '', data = {}) {\n  const response = await fetch(url, {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${window.localStorage.getItem('token')}`,\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n// -----PUT DATA-----\n\nasync function putData(url = '', data = {}) {\n  const response = await fetch(url, {\n    method: 'PUT',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${window.localStorage.getItem('token')}`,\n    },\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n// -----GET DATA-----\n\nasync function getData(url = '') {\n  const response = await fetch(url, {\n    method: 'GET',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${window.localStorage.getItem('token')}`,\n    },\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\n// -----REFRESH DATA-----\n\nconst refreshTasks = () => {\n  getData('https://radiant-temple-07706.herokuapp.com/cards').then((data) => {\n    console.log(data);\n    data.forEach((chunk) => {\n      const { id } = chunk;\n      const { title } = chunk;\n      const { description } = chunk;\n      const { status } = chunk;\n      const card = new Card(id, title, description, status);\n      console.log(card);\n      appendCard(card);\n    });\n  });\n};\n\n// Submit new task\n\nconst submitNewTask = () => {\n  const title = newTaskName.value;\n  const description = newTaskContent.value;\n  const status = document.querySelector('input[name=\"status-option\"]:checked')\n    .value;\n\n  if (title !== '' && description !== '') {\n    const card = new Card(null, title, description, status);\n    console.log(card);\n    postData('https://radiant-temple-07706.herokuapp.com/cards', card).then(\n      (data) => {\n        console.log(data);\n        document.location.reload();\n      },\n    );\n  }\n};\n\n// -----DELETE DATA-----\n\nconst removeCard = (id) => {\n  fetch(`https://radiant-temple-07706.herokuapp.com/cards/${id}`, {\n    method: 'DELETE',\n    mode: 'cors',\n    cache: 'no-cache',\n    credentials: 'same-origin',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${window.localStorage.getItem('token')}`,\n    },\n  })\n    .then(() => {\n      console.log('removed');\n      document.location.reload();\n    })\n    .catch((err) => {\n      console.error(err);\n    });\n};\n\n// -----CHANGE OPTION-----\n\nconst openChangeCardMenu = (card) => {\n  const newTaskStatus = document.querySelector('#status-options');\n\n  createNewTask.style.display = 'flex';\n\n  newTaskName.value = card.title;\n  newTaskContent.value = card.description;\n  newTaskStatus.value = card.status;\n\n  newTaskName.contentEditable = true;\n  newTaskContent.contentEditable = true;\n\n  card.title = newTaskName.value;\n  card.description = newTaskContent.value;\n  card.status = newTaskStatus.value;\n\n  addTaskButton.innerText = 'Change task';\n  addTaskButton.style.color = '#37d050';\n  addTaskButton.style.background = '#daffd4';\n\n  createNewTask.onsubmit = () => {\n    changeCard(card);\n\n    createNewTask.onsubmit = {};\n\n    return false;\n  };\n};\n\nconst changeCard = (card) => {\n  card.title = newTaskName.value;\n  card.description = newTaskContent.value;\n  card.status = document.querySelector(\n    'input[name=\"status-option\"]:checked',\n  ).value;\n\n  if (card.title !== '' && card.description !== '') {\n    putData(`https://radiant-temple-07706.herokuapp.com/cards/${card.id}`, card)\n      .then((data) => {\n        console.log(data);\n        document.location.reload();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n};\n\n// -----WORKING WITH NEW TASK-----\n\nconst btnAddTask = document.querySelector('.btn-add-task');\nconst btnCloseTask = document.querySelector('#new-task-close');\nconst createNewTask = document.querySelector('#new-task');\nconst newTaskName = document.querySelector('#new-task-name');\nconst newTaskContent = document.querySelector('#new-task-content');\n\n// Open/close new task form\n\nbtnAddTask.addEventListener('click', () => {\n  createNewTask.style.display = 'flex';\n  addTaskButton.innerText = 'Add task';\n  document.getElementById('radioToDo').checked = true; // set default value\n\n  createNewTask.onsubmit = () => {\n    submitNewTask();\n\n    createNewTask.onsubmit = {};\n    return false;\n  };\n});\n\nbtnCloseTask.addEventListener('click', () => {\n  newTaskName.value = '';\n  newTaskContent.value = '';\n  document.getElementById('radioToDo').checked = true; // set default value\n  createNewTask.style.display = 'none';\n});\n\n// -----ROUTING-----\n\nconst boardTitle = document.querySelector('#section-title');\nconst dashboardPage = document.querySelector('#dashboard-page');\nconst toDoPage = document.querySelector('#to-do-page');\nconst inProgressPage = document.querySelector('#in-progress-page');\nconst testingPage = document.querySelector('#testing-page');\nconst donePage = document.querySelector('#done-page');\n\n// -----DASHBOARD PAGE-----\n\ndashboardPage.addEventListener('click', () => {\n  boardTitle.innerHTML = 'Dashboard';\n\n  dashboardPage.parentElement.classList.add('task-types-active');\n\n  toDoPage.parentElement.classList.remove('task-types-active');\n  inProgressPage.parentElement.classList.remove('task-types-active');\n  testingPage.parentElement.classList.remove('task-types-active');\n  donePage.parentElement.classList.remove('task-types-active');\n\n  document.querySelector('#toDo .task-type-section-title').style.display = 'block';\n  document.querySelector('#inProgress .task-type-section-title').style.display = 'block';\n  document.querySelector('#testing .task-type-section-title').style.display = 'block';\n  document.querySelector('#done .task-type-section-title').style.display = 'block';\n\n  toDoSection.style.display = 'flex';\n  InProgressSection.style.display = 'flex';\n  testingSection.style.display = 'flex';\n  doneSection.style.display = 'flex';\n});\n\n// -----TO DO PAGE-----\n\ntoDoPage.addEventListener('click', () => {\n  boardTitle.innerHTML = 'To Do';\n\n  toDoPage.parentElement.classList.add('task-types-active');\n\n  dashboardPage.parentElement.classList.remove('task-types-active');\n  inProgressPage.parentElement.classList.remove('task-types-active');\n  testingPage.parentElement.classList.remove('task-types-active');\n  donePage.parentElement.classList.remove('task-types-active');\n\n  document.querySelector('#toDo .task-type-section-title').style.display = 'none';\n\n  toDoSection.style.display = 'flex';\n  InProgressSection.style.display = 'none';\n  testingSection.style.display = 'none';\n  doneSection.style.display = 'none';\n});\n\n// -----IN PROGRESS PAGE-----\n\ninProgressPage.addEventListener('click', () => {\n  boardTitle.innerHTML = 'In Progress';\n\n  inProgressPage.parentElement.classList.add('task-types-active');\n\n  dashboardPage.parentElement.classList.remove('task-types-active');\n  toDoPage.parentElement.classList.remove('task-types-active');\n  testingPage.parentElement.classList.remove('task-types-active');\n  donePage.parentElement.classList.remove('task-types-active');\n\n  document.querySelector('#inProgress .task-type-section-title').style.display = 'none';\n\n  toDoSection.style.display = 'none';\n  InProgressSection.style.display = 'flex';\n  testingSection.style.display = 'none';\n  doneSection.style.display = 'none';\n});\n\n// -----TESTING PAGE-----\n\ntestingPage.addEventListener('click', () => {\n  boardTitle.innerHTML = 'Testing';\n\n  testingPage.parentElement.classList.add('task-types-active');\n\n  dashboardPage.parentElement.classList.remove('task-types-active');\n  inProgressPage.parentElement.classList.remove('task-types-active');\n  toDoPage.parentElement.classList.remove('task-types-active');\n  donePage.parentElement.classList.remove('task-types-active');\n\n  document.querySelector('#testing .task-type-section-title').style.display = 'none';\n\n  toDoSection.style.display = 'none';\n  InProgressSection.style.display = 'none';\n  testingSection.style.display = 'flex';\n  doneSection.style.display = 'none';\n});\n\n// -----DONE PAGE-----\n\ndonePage.addEventListener('click', () => {\n  boardTitle.innerHTML = 'Done';\n\n  donePage.parentElement.classList.add('task-types-active');\n\n  dashboardPage.parentElement.classList.remove('task-types-active');\n  toDoPage.parentElement.classList.remove('task-types-active');\n  testingPage.parentElement.classList.remove('task-types-active');\n  InProgressSection.parentElement.classList.remove('task-types-active');\n\n  document.querySelector('#done .task-type-section-title').style.display = 'none';\n\n  toDoSection.style.display = 'none';\n  InProgressSection.style.display = 'none';\n  testingSection.style.display = 'none';\n  doneSection.style.display = 'flex';\n});\n\nrefreshTasks();\n\nlogOut.addEventListener('click', () => {\n  if (window.confirm('You really want to LOG OUT?')) {\n    window.localStorage.clear();\n    window.location.href = 'login.html';\n  }\n});\n\navaterLetter.innerText = username.charAt(0).toUpperCase();\n"],"sourceRoot":""}